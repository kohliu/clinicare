package com.techstomach.justdental.model.schema;
// Generated Nov 19, 2016 4:08:03 PM by Hibernate Tools 5.2.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PatientDb generated by hbm2java
 */
@Entity
@Table(name = "patient_db", catalog = "jd_database")
public class PatientDb implements java.io.Serializable {

	private Integer patientId;
	private AddressDb addressDb;
	private EmergencyContactDb emergencyContactDb;
	private String firstName;
	private String middleName;
	private String lastName;
	private Date dateOfBirth;
	private int gender;
	private String phoneNumber;
	private Integer bloodType;
	private Integer tribe;
	private Integer race;
	private Integer religion;
	private String occupation;
	private Integer education;
	private String patientNote;
	private String oldPhysicalRecordNumb;
	private String insuranceNumber;
	private Date insuranceExpiration;
	private String placeOfBirth;
	private Byte maritalStatus;
	private Date dateOfDeath;
	private Date creationDate;
	private boolean isActive;
	private List<PatientCheckinDb> patientCheckinDbs ;
	private List<PatientImmunizationDb>  patientImmunizationDbs ;
	private List<PatientMedicationDb>  patientMedicationDbs ;
	private List<PatientAllergyDb> patientAllergyDbs ;
	private List<PatientProblemDb> patientProblemDbs ;

	public PatientDb() {
	}

	public PatientDb(AddressDb addressDb, String firstName, String lastName, Date dateOfBirth, int gender,
			Date creationDate, boolean isActive) {
		this.addressDb = addressDb;
		this.firstName = firstName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
		this.gender = gender;
		this.creationDate = creationDate;
		this.isActive = isActive;
	}

	public PatientDb(AddressDb addressDb, EmergencyContactDb emergencyContactDb, String firstName, String middleName,
			String lastName, Date dateOfBirth, int gender, String phoneNumber, Integer bloodType, Integer tribe,
			Integer race, Integer religion, String occupation, Integer education, String patientNote,
			String oldPhysicalRecordNumb, String insuranceNumber, Date insuranceExpiration, String placeOfBirth,
			Byte maritalStatus, Date dateOfDeath, Date creationDate, boolean isActive,
					 List<PatientCheckinDb>  patientCheckinDbs,
					 List<PatientImmunizationDb>  patientImmunizationDbs, List<PatientMedicationDb> patientMedicationDbs,
					 List<PatientAllergyDb> patientAllergyDbs, List<PatientProblemDb> patientProblemDbs) {
		this.addressDb = addressDb;
		this.emergencyContactDb = emergencyContactDb;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
		this.gender = gender;
		this.phoneNumber = phoneNumber;
		this.bloodType = bloodType;
		this.tribe = tribe;
		this.race = race;
		this.religion = religion;
		this.occupation = occupation;
		this.education = education;
		this.patientNote = patientNote;
		this.oldPhysicalRecordNumb = oldPhysicalRecordNumb;
		this.insuranceNumber = insuranceNumber;
		this.insuranceExpiration = insuranceExpiration;
		this.placeOfBirth = placeOfBirth;
		this.maritalStatus = maritalStatus;
		this.dateOfDeath = dateOfDeath;
		this.creationDate = creationDate;
		this.isActive = isActive;
		this.patientCheckinDbs = patientCheckinDbs;
		this.patientImmunizationDbs = patientImmunizationDbs;
		this.patientMedicationDbs = patientMedicationDbs;
		this.patientAllergyDbs = patientAllergyDbs;
		this.patientProblemDbs = patientProblemDbs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "PatientID", unique = true, nullable = false)
	public Integer getPatientId() {
		return this.patientId;
	}

	public void setPatientId(Integer patientId) {
		this.patientId = patientId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AddressID", nullable = false)
	public AddressDb getAddressDb() {
		return this.addressDb;
	}

	public void setAddressDb(AddressDb addressDb) {
		this.addressDb = addressDb;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EmergencyContactID")
	public EmergencyContactDb getEmergencyContactDb() {
		return this.emergencyContactDb;
	}

	public void setEmergencyContactDb(EmergencyContactDb emergencyContactDb) {
		this.emergencyContactDb = emergencyContactDb;
	}

	@Column(name = "FirstName", nullable = false, length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "MiddleName", length = 30)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "LastName", nullable = false, length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DateOfBirth", nullable = false, length = 10)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "Gender", nullable = false)
	public int getGender() {
		return this.gender;
	}

	public void setGender(int gender) {
		this.gender = gender;
	}

	@Column(name = "PhoneNumber", length = 20)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "BloodType")
	public Integer getBloodType() {
		return this.bloodType;
	}

	public void setBloodType(Integer bloodType) {
		this.bloodType = bloodType;
	}

	@Column(name = "Tribe")
	public Integer getTribe() {
		return this.tribe;
	}

	public void setTribe(Integer tribe) {
		this.tribe = tribe;
	}

	@Column(name = "Race")
	public Integer getRace() {
		return this.race;
	}

	public void setRace(Integer race) {
		this.race = race;
	}

	@Column(name = "Religion")
	public Integer getReligion() {
		return this.religion;
	}

	public void setReligion(Integer religion) {
		this.religion = religion;
	}

	@Column(name = "Occupation", length = 30)
	public String getOccupation() {
		return this.occupation;
	}

	public void setOccupation(String occupation) {
		this.occupation = occupation;
	}

	@Column(name = "Education")
	public Integer getEducation() {
		return this.education;
	}

	public void setEducation(Integer education) {
		this.education = education;
	}

	@Column(name = "PatientNote")
	public String getPatientNote() {
		return this.patientNote;
	}

	public void setPatientNote(String patientNote) {
		this.patientNote = patientNote;
	}

	@Column(name = "OldPhysicalRecordNumb", length = 50)
	public String getOldPhysicalRecordNumb() {
		return this.oldPhysicalRecordNumb;
	}

	public void setOldPhysicalRecordNumb(String oldPhysicalRecordNumb) {
		this.oldPhysicalRecordNumb = oldPhysicalRecordNumb;
	}

	@Column(name = "InsuranceNumber", length = 20)
	public String getInsuranceNumber() {
		return this.insuranceNumber;
	}

	public void setInsuranceNumber(String insuranceNumber) {
		this.insuranceNumber = insuranceNumber;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "InsuranceExpiration", length = 19)
	public Date getInsuranceExpiration() {
		return this.insuranceExpiration;
	}

	public void setInsuranceExpiration(Date insuranceExpiration) {
		this.insuranceExpiration = insuranceExpiration;
	}

	@Column(name = "PlaceOfBirth", length = 50)
	public String getPlaceOfBirth() {
		return this.placeOfBirth;
	}

	public void setPlaceOfBirth(String placeOfBirth) {
		this.placeOfBirth = placeOfBirth;
	}

	@Column(name = "MaritalStatus")
	public Byte getMaritalStatus() {
		return this.maritalStatus;
	}

	public void setMaritalStatus(Byte maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateOfDeath", length = 19)
	public Date getDateOfDeath() {
		return this.dateOfDeath;
	}

	public void setDateOfDeath(Date dateOfDeath) {
		this.dateOfDeath = dateOfDeath;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreationDate", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "IsActive", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDb")
	public List<PatientCheckinDb>  getPatientCheckinDbs() {
		return this.patientCheckinDbs;
	}

	public void setPatientCheckinDbs(List<PatientCheckinDb>  patientCheckinDbs) {
		this.patientCheckinDbs = patientCheckinDbs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDb")
	public List<PatientImmunizationDb>  getPatientImmunizationDbs() {
		return this.patientImmunizationDbs;
	}

	public void setPatientImmunizationDbs(List<PatientImmunizationDb>  patientImmunizationDbs) {
		this.patientImmunizationDbs = patientImmunizationDbs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDb")
	public List<PatientMedicationDb> getPatientMedicationDbs() {
		return this.patientMedicationDbs;
	}

	public void setPatientMedicationDbs(List<PatientMedicationDb> patientMedicationDbs) {
		this.patientMedicationDbs = patientMedicationDbs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDb")
	public List<PatientAllergyDb> getPatientAllergyDbs() {
		return this.patientAllergyDbs;
	}

	public void setPatientAllergyDbs(List<PatientAllergyDb> patientAllergyDbs) {
		this.patientAllergyDbs = patientAllergyDbs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientDb")
	public List<PatientProblemDb> getPatientProblemDbs() {
		return this.patientProblemDbs;
	}

	public void setPatientProblemDbs(List<PatientProblemDb> patientProblemDbs) {
		this.patientProblemDbs = patientProblemDbs;
	}

}
